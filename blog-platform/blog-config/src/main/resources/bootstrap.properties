server.port=8000
spring.application.name=blog-config
# 为spring读取的配置文件名，从数据库中读取，必须为jdbc
spring.profiles.active=jdbc
#注册中心nacos地址
#spring.cloud.nacos.discovery.server-addr=192.168.10.131:8848
#spring.cloud.nacos.discovery.username=nacos
#spring.cloud.nacos.discovery.password=nacos

#读取的配置的分支，这个需要在数据库中数据对应
spring.cloud.config.label=master
spring.cloud.config.profile=dev
# 指定获取配置项的sql
spring.cloud.config.server.jdbc.sql=select `key`,value from config where application=? and profile=? and label=?
spring.cloud.config.server.jdbc.order=0
spring.cloud.config.server.default-label=master

# 数据库连接配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.10.131:3306/blog?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456



# Flyway配置
spring.flyway.enabled=false
spring.flyway.baseline-description=baseline init
# 当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false.
spring.flyway.baseline-on-migrate=true
# 指定Flyway扫描数据库脚本的路径
spring.flyway.locations=classpath:db/migration/
# metadata版本控制信息表,默认flyway_schema_history
spring.flyway.table=flyway_history_table_${spring.application.name}
